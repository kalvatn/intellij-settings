<application>
  <component name="VimEditorSettings">
    <editor />
  </component>
  <component name="VimHistorySettings">
    <history>
      <history-search>
        <entry>insert into livescore</entry>
        <entry>insert into</entry>
        <entry>insert into livescore_auto</entry>
        <entry>,</entry>
        <entry>.*INSERT</entry>
        <entry>,.*</entry>
        <entry>\|\(.*</entry>
        <entry>|(.*</entry>
        <entry>^|</entry>
        <entry>|</entry>
        <entry>;</entry>
        <entry>ndas</entry>
        <entry>22548446</entry>
        <entry>systemsettings</entry>
        <entry>;$</entry>
        <entry>who won</entry>
        <entry>update</entry>
        <entry>update systemsettings</entry>
        <entry>$</entry>
        <entry>^</entry>
      </history-search>
      <history-cmd>
        <entry encoding="base64">JzwsJz5zLywkLy9n</entry>
        <entry encoding="base64">JzwsJz5zL14vdXBkYXRlIHN0YXRpc3RpY3NfdGFibGVzIHQuL2c=</entry>
        <entry encoding="base64">JzwsJz5zL14vdXBkYXRlIHN0YXRpc3RpY3NfdGFibGVzIHQgc2V0IHQuL2c=</entry>
        <entry encoding="base64">JzwsJz5zLyQvIE5PVCBJTiAoJzAnLCcxJyk7L2c=</entry>
        <entry encoding="base64">JzwsJz5zLywvLFxyL2c=</entry>
        <entry encoding="base64">JzwsJz5zL2hvbWUvYXdheS9n</entry>
        <entry encoding="base64">JzwsJz5zLywvXHIvZw==</entry>
        <entry encoding="base64">JzwsJz5zLyQvLCAxLCBOT1coKSwgbnVsbCks</entry>
        <entry encoding="base64">JzwsJz5zLy4qSU5TRVJUL0lOU0VSVC9n</entry>
        <entry encoding="base64">JzwsJz5zLywuKi8sL2c=</entry>
        <entry encoding="base64">JzwsJz5zL1x8XCguKi8vZw==</entry>
        <entry encoding="base64">JzwsJz5zL3woLiovL2c=</entry>
        <entry encoding="base64">JzwsJz5zL14vfC8vZw==</entry>
        <entry encoding="base64">JzwsJz5zL158Ly9n</entry>
        <entry encoding="base64">JzwsJz5zL3wvLCAjL2c=</entry>
        <entry encoding="base64">JzwsJz5zLzsvLC9n</entry>
        <entry encoding="base64">JzwsJz5zLyQvLC9n</entry>
        <entry encoding="base64">JzwsJz5zLzskLywvZw==</entry>
        <entry encoding="base64">JzwsJz5zLyQvLDEsTk9XKCksL2c=</entry>
        <entry encoding="base64">JzwsJz5zL14vKC9n</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
  </component>
  <component name="VimKeySettings">
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed L</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed K</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed J</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
  <component name="VimMarksSettings">
    <globalmarks />
    <filemarks>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" timestamp="1601388299984">
        <mark key="'" line="63" column="0" />
        <mark key="[" line="95" column="71" />
        <mark key="]" line="84" column="15" />
        <mark key="^" line="84" column="15" />
        <mark key="." line="84" column="14" />
      </file>
      <file name="/Dummy.txt" timestamp="1601296471796">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/e1039c38-5c9c-439b-92ae-732873bc4650/console.sql" timestamp="1594402960749">
        <mark key="'" line="1" column="0" />
        <mark key="[" line="32" column="41" />
        <mark key="]" line="32" column="41" />
        <mark key="." line="32" column="40" />
        <mark key="^" line="32" column="41" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/f1982967-9caa-432d-a7cd-e5d8d32134ee/console_4.sql" timestamp="1599474713101">
        <mark key="[" line="0" column="31" />
        <mark key="]" line="0" column="50" />
        <mark key="^" line="0" column="50" />
        <mark key="." line="0" column="49" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/06f52eb3-f667-4283-bc9c-1cff618e2e77/console_1.sql" timestamp="1600939009813">
        <mark key="[" line="6" column="45" />
        <mark key="]" line="6" column="45" />
        <mark key="^" line="6" column="45" />
        <mark key="." line="6" column="44" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/98be61f3-2d9b-4e10-bd9c-eb5f9bc731ea/console.sql" timestamp="1594639021183">
        <mark key="'" line="11" column="52" />
        <mark key="[" line="110" column="22" />
        <mark key="]" line="110" column="23" />
        <mark key="^" line="110" column="23" />
        <mark key="." line="110" column="22" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/f1982967-9caa-432d-a7cd-e5d8d32134ee/console_3.sql" timestamp="1599217151914">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/06f52eb3-f667-4283-bc9c-1cff618e2e77/console.sql" timestamp="1600336498133">
        <mark key="[" line="0" column="8" />
        <mark key="]" line="0" column="94" />
        <mark key="^" line="0" column="94" />
        <mark key="." line="0" column="93" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/8e5b7a8c-5017-4e30-85f6-9dd4af2a5fe5/console_1.sql" timestamp="1600336418408">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="46" />
        <mark key="^" line="0" column="46" />
        <mark key="." line="0" column="45" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/06f52eb3-f667-4283-bc9c-1cff618e2e77/console_2.sql" timestamp="1601044218474">
        <mark key="[" line="2" column="5" />
        <mark key="]" line="2" column="5" />
        <mark key="^" line="2" column="5" />
        <mark key="." line="2" column="4" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/49fd5b0e-8859-4895-aba8-a5c13044d8c3/console.sql" timestamp="1601048889952">
        <mark key="[" line="32" column="5" />
        <mark key="]" line="19" column="1" />
        <mark key="^" line="19" column="1" />
        <mark key="." line="19" column="0" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" timestamp="1601387509560">
        <mark key="'" line="353" column="35" />
        <mark key="[" line="1480" column="18" />
        <mark key="]" line="1480" column="65" />
        <mark key="." line="1480" column="64" />
        <mark key="^" line="1480" column="65" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/6a9c955c-d143-44da-9fcc-a96fe87fd136/console_5.sql" timestamp="1594121812759">
        <mark key="[" line="1" column="1" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/952286c0-6496-4865-b2e0-700531d3b7d1/console_3.sql" timestamp="1599570262639">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/06bf19c7-43b0-4cc3-88a6-564d05034a2c/console.sql" timestamp="1594646950993">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/952286c0-6496-4865-b2e0-700531d3b7d1/console_2.sql" timestamp="1597323233590">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/f1982967-9caa-432d-a7cd-e5d8d32134ee/console_2.sql" timestamp="1596451378971">
        <mark key="[" line="6" column="1" />
        <mark key="]" line="9" column="66" />
        <mark key="." line="9" column="65" />
        <mark key="^" line="9" column="66" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/.datagrid/cell" timestamp="1601380540145">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="5" />
        <mark key="]" line="0" column="4" />
        <mark key="." line="0" column="4" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/7f7c7f3b-635e-4f09-a69c-5498a7fc1d7c/console_2.sql" timestamp="1601285482252">
        <mark key="'" line="1" column="0" />
        <mark key="[" line="345" column="37" />
        <mark key="]" line="345" column="23" />
        <mark key="." line="345" column="22" />
        <mark key="^" line="345" column="23" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/98be61f3-2d9b-4e10-bd9c-eb5f9bc731ea/console_3.sql" timestamp="1598272419562">
        <mark key="'" line="20" column="36" />
        <mark key="[" line="38" column="41" />
        <mark key="]" line="38" column="41" />
        <mark key="." line="38" column="40" />
        <mark key="^" line="38" column="41" />
      </file>
    </filemarks>
    <jumps>
      <jump line="47" column="30" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="38" column="43" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="2830" column="23" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="42" column="67" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="2764" column="73" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="28" column="68" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="1310" column="4" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="1405" column="20" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="1415" column="23" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="2823" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="1393" column="38" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="58" column="66" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="1408" column="19" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="2828" column="47" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="1401" column="37" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="40" column="43" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="1421" column="20" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="33" column="2" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="2835" column="44" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="1383" column="7" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="100" column="100" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="30" column="40" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="1418" column="20" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="75" column="75" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="2769" column="41" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="1478" column="68" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="71" column="58" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="20" column="20" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="1485" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="14" column="20" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="1481" column="100" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="52" column="68" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="1502" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="1417" column="28" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="18" column="20" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="2879" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="2860" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="1512" column="41" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="2872" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="1430" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="41" column="45" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="1424" column="17" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="21" column="51" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="1523" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="2897" column="25" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="2900" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="17" column="24" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="21" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/49fd5b0e-8859-4895-aba8-a5c13044d8c3/console.sql" />
      <jump line="1437" column="26" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="51" column="57" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="1506" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="94" column="38" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="25" column="86" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="34" column="29" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="2902" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="20" column="51" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="2918" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="12" column="16" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="43" column="35" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="349" column="51" filename="$APPLICATION_CONFIG_DIR$/consoles/db/7f7c7f3b-635e-4f09-a69c-5498a7fc1d7c/console_2.sql" />
      <jump line="550" column="68" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="8" column="18" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="1428" column="63" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="81" column="74" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="1508" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="1517" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="1439" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="7" column="20" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="1450" column="13" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="9" column="22" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="2943" column="21" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="1467" column="42" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="3018" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="57" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="3002" column="26" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="2997" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="59" column="7" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="34" column="20" filename="$APPLICATION_CONFIG_DIR$/consoles/db/7f7c7f3b-635e-4f09-a69c-5498a7fc1d7c/console_2.sql" />
      <jump line="1" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/7f7c7f3b-635e-4f09-a69c-5498a7fc1d7c/console_2.sql" />
      <jump line="55" column="20" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="1461" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="16" column="17" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="1462" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="23" column="6" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="40" column="36" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="1455" column="8" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="0" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/.datagrid/cell" />
      <jump line="12" column="16" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="1468" column="51" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="54" column="23" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="60" column="71" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="37" column="66" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="65" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="10" column="22" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="83" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="80" column="7" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="15" column="20" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="353" column="35" filename="$APPLICATION_CONFIG_DIR$/consoles/db/a8af0c63-1d21-4c0e-82d1-1d27cad43978/console.sql" />
      <jump line="88" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
      <jump line="63" column="0" filename="$APPLICATION_CONFIG_DIR$/consoles/db/85420ea6-4920-4a82-908e-0ab1bb91c217/console.sql" />
    </jumps>
  </component>
  <component name="VimRegisterSettings">
    <registers>
      <register name="&quot;" type="4">
        <text>sport</text>
      </register>
      <register name="+" type="2">
        <text encoding="base64">c2VsZWN0ICoKZnJvbSBwcm9maWxpbmdfY29ubmVjdGlvbl9wb29sIHAKd2hlcmUgMQogIGFuZCBwLmNvbXBvbmVudF9pZCBpbiAoMjcwKQogIGFuZCBwLmFkZGVkX2F0ID49IE5PVygpIC0gaW50ZXJ2YWwgMSBob3VyCjsKCg==</text>
      </register>
      <register name="-" type="4">
        <text>sport</text>
      </register>
      <register name="/" type="4">
        <text>^</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">c2VsZWN0ICoKZnJvbSBkZWZhdWx0X3Byb3BlcnR5X3Nwb3J0IHAKd2hlcmUgcC5zcG9ydF9pZCA9IDU7Cg==</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">YW5kIGUuCg==</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">ICAgICAgbGVmdCBqb2luIAo=</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">c2VsZWN0ICoKZnJvbSBkZWZhdWx0X3Byb3BlcnR5OwoKc2hvdyB0YWJsZXMgbGlrZSAiJWRlZmF1bHRfcHJvcGVydHklIgoKCnNlbGVjdCAqCmZyb20gbGl2ZXNjb3JlX2F1dG9ydWxlX3R5cGUgYXIKd2hlcmUgYXIudHlwZWlkID0gMTEyMAogIGFuZCBhci5ydWxlaWQgPSAyOTsKOwoKCnNlbGVjdCAqCmZyb20gbGl2ZXNjb3JlX2V2ZW50dHlwZSBldAp3aGVyZSBldC5ldmVudHR5cGUgaW4gKDExMzUsIDE4MTApCjsKc2VsZWN0ICoKZnJvbSBsaXZlc2NvcmVfbWF0Y2ggbG0KICAgICAgIGpvaW4gbGl2ZXNjb3JlX2V2ZW50X3RvcF9iYWNrdXAgZSBvbiBlLm1hdGNoaWQgPSBsbS5tYXRjaGlkIGFuZCBlLmV2ZW50dHlwZSBpbiAoMTEzNSwgMTgxMCkKd2hlcmUgbG0uc3BvcnRpZCA9IDEKOwo=</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">c2hvdyBmdWxsIGNvbHVtbnMgZnJvbSBzbXBfbWF0Y2gKOwoKCnNlbGVjdCAqCmZyb20gc3lzdGVtc2V0dGluZ3Mgcwp3aGVyZSBzLkNvbXBvbmVudElkID0gNDQ5CjsKCnNlbGVjdCBzLlNQT1JUSUQsIHMuU1BPUlROQU1FLCByYy5SRUFMQ0FURUdPUllJRCwgcmMuREVTQ1JJUFRJT04KZnJvbSByZWFsY2F0ZWdvcnkgcmMKam9pbiBzcG9ydHRhYmxlIHMgb24gcy5TUE9SVElEID0gcmMuU1BPUlRJRAp3aGVyZSByYy5ERVNDUklQVElPTiBsaWtlICIlZWxlY3Ryb25pYyBsZWFndWVzJSIKCgpzZWxlY3QgKgpmcm9tIHNwb3J0dGFibGUgcwp3aGVyZSBzLlNQT1JUTkFNRSBsaWtlICIlc29jY2VyJSIKOwoKc2VsZWN0ICoKZnJvbSByZWFsY2F0ZWdvcnkgcmMKd2hlcmUgcmMuU1BPUlRJRCA9IDEgYW5kIHJjLkRFU0NSSVBUSU9OIGxpa2UgIiVlbGVjdHJvbmljJSIKICAgb3IgcmMuREVTQ1JJUFRJT04gbGlrZSAiJWUtc3BvcnQlIgo7CgoK</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">CnNlbGVjdCBkYXRlKGxtLmRhdGVvZm1hdGNoKSwgc3BvcnQuU1BPUlROQU1FIGFzIHNwb3J0LCBjYXRlZ29yeS5ERVNDUklQVElPTiBhcyBjYXRlZ29yeSwgY291bnQoZGlzdGluY3QgZS5zY291dGV2ZW50aWQpIGFzIHNjb3V0X2V2ZW50X2NvdW50CmZyb20gbGl2ZXNjb3JlX21hdGNoIGxtCiAgICBqb2luIHNwb3J0dGFibGUgc3BvcnQgb24gc3BvcnQuU1BPUlRJRCA9IGxtLnNwb3J0aWQKICAgIGpvaW4gcmVhbGNhdGVnb3J5IGNhdGVnb3J5IG9uIGNhdGVnb3J5LlJFQUxDQVRFR09SWUlEID0gbG0ucmVhbGNhdGVnb3J5aWQKICAgICAgIGxlZnQgam9pbiBsaXZlc2NvcmVfZXZlbnRfdG9wIGUgb24gZS5tYXRjaGlkID0gbG0ubWF0Y2hpZCBhbmQgZS5zY291dGV2ZW50aWQgaXMgbm90IG51bGwgYW5kIGUuc291cmNlaWQgPSA5NzMKd2hlcmUgMQojIGFuZCBsbS5wdWJsaXNoIDwtIGV4Y2x1ZGVzIEVsZWN0cm9uaWMgTGVhZ3VlcwogIGFuZCBsbS5zY291dG1hdGNoCiAgYW5kIGxtLmRhdGVvZm1hdGNoID49ICIyMDIwLTA5LTE5IiBhbmQgbG0uZGF0ZW9mbWF0Y2ggPCAiMjAyMC0wOS0yMSIKZ3JvdXAgYnkgZGF0ZShsbS5kYXRlb2ZtYXRjaCksIGxtLnNwb3J0aWQsIGxtLnJlYWxjYXRlZ29yeWlkCm9yZGVyIGJ5IGRhdGUobG0uZGF0ZW9mbWF0Y2gpLCBzcG9ydC5TUE9SVE5BTUUsIHNjb3V0X2V2ZW50X2NvdW50IGRlc2MKOwoKCnNlbGVjdCAqIGZyb20gbGl2ZXNjb3JlX21hdGNoIGxtIHdoZXJlIGxtLnNwb3J0aWQgaW4gKDEpIEFORCBsbS5yZWFsY2F0ZWdvcnlpZCBpbiAoMTAzMyk7CnNlbGVjdCAqIGZyb20gbGl2ZXNjb3JlX21hdGNoIGxtIHdoZXJlIGxtLnNwb3J0aWQgaW4gKDEsMiw0LDUsMjEsMjMpIEFORCBsbS5yZWFsY2F0ZWdvcnlpZCBpbiAoMTAzMywgMjEyNywgMjEzMywgMjEzOSwgMjEzNikKOwoKc2VsZWN0ICogZnJvbSBsaXZlc2NvcmVfbWF0Y2ggbG0gd2hlcmUgbG0uc3BvcnRpZCA9IDEgYW5kIGxtLnJlYWxjYXRlZ29yeWlkIGluICgxLCAyLDM0LDUpCnNlbGVjdCAqIGZyb20gbGl2ZXNjb3JlX21hdGNoIGxtIHdoZXJlIGxtLnNwb3J0aWQgPSAxIGFuZCBsbS5yZWFsY2F0ZWdvcnlpZCBub3QgaW4gKDEsMiwzLDQsNSkKCgpzZWxlY3QgKiBmcm9tIGxpdmVzY29yZV9tYXRjaCBsbSB3aGVyZSBsbS5zcG9ydGlkIG5vdCBpbiAoMSwgNSwgMTYpIGFuZCBsbS5yZWFsY2F0ZWdvcnlpZAo=</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">U3lzdGVtLmdjKCkK</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">ICAK</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">Owo=</text>
      </register>
      <register name=":" type="4">
        <text encoding="base64">JzwsJz5zL14vKC9n</text>
      </register>
    </registers>
  </component>
  <component name="VimSearchSettings">
    <search>
      <last-search>^</last-search>
      <last-offset />
      <last-pattern>^</last-pattern>
      <last-replace>(</last-replace>
      <last-substitute>^</last-substitute>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
  </component>
  <component name="VimSettings">
    <state version="6" enabled="true" />
    <notifications>
      <idea-join enabled="true" />
      <idea-put enabled="false" />
    </notifications>
  </component>
</application>