<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="/work/projects/gitlab/java/source/src/com/oddsarbitrage/schedule2/tasks/virtualleague/VDROddsSaver.java" timestamp="1549543290726">
        <mark key="[" line="78" column="60" />
        <mark key="]" line="78" column="71" />
        <mark key="^" line="78" column="71" />
        <mark key="." line="78" column="71" />
      </file>
      <file name="/work/projects/gitlab/java/source/src/com/oddsarbitrage/common/Util4.java" timestamp="1549633746575">
        <mark key="'" line="1174" column="33" />
        <mark key="[" line="468" column="0" />
        <mark key="]" line="476" column="3" />
      </file>
      <file name="$MAVEN_REPOSITORY$/org/apache/poi/poi-ooxml/3.17/poi-ooxml-3.17-sources.jar!/org/apache/poi/xssf/usermodel/XSSFCellStyle.java" timestamp="1549549666670">
        <mark key="'" line="244" column="52" />
      </file>
      <file name="/work/projects/gitlab/livescore/common/src/test/java/com/oddsarbitrage/livescore/TestMatch2.java" timestamp="1549952411870">
        <mark key="[" line="15" column="0" />
        <mark key="]" line="15" column="0" />
        <mark key="." line="15" column="0" />
      </file>
      <file name="/work/projects/gitlab/livescore/common/src/main/java/com/oddsarbitrage/livescore/event/Event.java" timestamp="1550066850720">
        <mark key="'" line="1723" column="17" />
        <mark key="[" line="1739" column="85" />
        <mark key="]" line="1740" column="24" />
        <mark key="." line="1740" column="24" />
        <mark key="^" line="1740" column="24" />
      </file>
      <file name="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-common/2019.1.1-SNAPSHOT/ingame-betting-common-2019.1.1-20190206.064553-212.jar!/com/oddsarbitrage/liveodds/server/SubType.class" timestamp="1549543200142">
        <mark key="'" line="922" column="13" />
      </file>
      <file name="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190204.115517-268.jar!/com/oddsarbitrage/scout/AstMatch.class" timestamp="1549284599888">
        <mark key="'" line="126" column="36" />
      </file>
      <file name="/work/projects/gitlab/java/xmlexport/xmlexport-ejb/src/main/java/com/betradar/export/services/ranking/TennisRankingServiceBean.java" timestamp="1549970534362">
        <mark key="'" line="224" column="26" />
      </file>
      <file name="/work/projects/gitlab/java/source/src/com/oddsarbitrage/schedule2/tasks/virtualleague/VirtualGamesProblemDetector.java" timestamp="1549466606024">
        <mark key="[" line="581" column="57" />
        <mark key="]" line="581" column="58" />
        <mark key="." line="581" column="58" />
        <mark key="^" line="581" column="58" />
      </file>
      <file name="/work/projects/gitlab/java/league-standings-builder/src/main/java/com/oddsarbitrage/common/Util4.java" timestamp="1549633752253">
        <mark key="'" line="121" column="4" />
        <mark key="[" line="5" column="0" />
        <mark key="]" line="13" column="5" />
        <mark key="." line="5" column="0" />
      </file>
      <file name="/work/projects/gitlab/java/source/src/com/oddsarbitrage/odds/ExSpreadOdds.java" timestamp="1549542341877">
        <mark key="[" line="34" column="19" />
        <mark key="]" line="34" column="36" />
        <mark key="." line="34" column="36" />
        <mark key="^" line="34" column="36" />
      </file>
      <file name="/work/projects/gitlab/java/source/src/com/oddsarbitrage/schedule2/tasks/virtualleague/VDRCreateDefaultOddskeys.java" timestamp="1549541598057">
        <mark key="[" line="35" column="27" />
        <mark key="]" line="35" column="27" />
        <mark key="." line="35" column="27" />
        <mark key="^" line="35" column="27" />
      </file>
      <file name="/work/projects/gitlab/livescore/common/pom.xml" timestamp="1549951979706">
        <mark key="[" line="32" column="26" />
        <mark key="]" line="32" column="26" />
        <mark key="^" line="32" column="26" />
        <mark key="." line="32" column="26" />
      </file>
      <file name="/work/projects/gitlab/java/sportradar-common/src/main/java/com/oddsarbitrage/statistics/Statistics.java" timestamp="1549557139128">
        <mark key="'" line="795" column="2" />
      </file>
      <file name="/work/projects/gitlab/java/source/src/com/oddsarbitrage/shittyutilsthatshouldnotexistinjavasource/VolleyballLeagueBreakProbabilityUtilityWrapperForScoutMatchDataVolleyballUtil.java" timestamp="1549541459575">
        <mark key="[" line="26" column="5" />
        <mark key="]" line="29" column="7" />
        <mark key="." line="29" column="7" />
        <mark key="^" line="29" column="7" />
      </file>
      <file name="/work/projects/gitlab/java/league-standings-builder/pom.xml" timestamp="1549633428502">
        <mark key="[" line="37" column="27" />
        <mark key="]" line="37" column="26" />
        <mark key="." line="37" column="26" />
        <mark key="^" line="37" column="26" />
      </file>
      <file name="/work/projects/gitlab/livescore/common/src/test/java/com/oddsarbitrage/livescore/data/LivescoreFreemarkerTest.java" timestamp="1549952359953">
        <mark key="[" line="10" column="0" />
        <mark key="]" line="10" column="0" />
        <mark key="." line="10" column="0" />
      </file>
      <file name="/work/projects/gitlab/java/league-standings-builder/src/main/java/com/oddsarbitrage/statistics/dbdata/ext/Match.java" timestamp="1549629845629">
        <mark key="[" line="31" column="0" />
        <mark key="]" line="31" column="0" />
        <mark key="." line="31" column="0" />
      </file>
      <file name="/work/projects/gitlab/livescore/common/src/main/java/com/oddsarbitrage/livescore/NewEventRecord.java" timestamp="1550066802661">
        <mark key="[" line="193" column="98" />
        <mark key="]" line="193" column="169" />
        <mark key="^" line="193" column="169" />
        <mark key="." line="193" column="169" />
      </file>
      <file name="/work/projects/gitlab/java/source/src/com/oddsarbitrage/itf/TimeOut.java" timestamp="1549467935710">
        <mark key="[" line="147" column="27" />
        <mark key="]" line="147" column="35" />
        <mark key="." line="147" column="35" />
        <mark key="^" line="147" column="35" />
      </file>
      <file name="/work/projects/gitlab/java/source/src/com/oddsarbitrage/bpr/render/xls/XSSFFontInfoWrapper.java" timestamp="1549551239524">
        <mark key="[" line="50" column="0" />
        <mark key="]" line="50" column="0" />
        <mark key="." line="50" column="0" />
        <mark key="^" line="50" column="74" />
      </file>
      <file name="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/sports/volleyball/ScoutMatchDataVolleyball.class" timestamp="1549466042121">
        <mark key="'" line="200" column="16" />
      </file>
      <file name="/work/projects/gitlab/java/source/src/com/oddsarbitrage/specialodds/generator/beachvolleyball/BeachVolleyballIngame.java" timestamp="1549541570221">
        <mark key="[" line="192" column="131" />
        <mark key="]" line="192" column="135" />
        <mark key="." line="192" column="135" />
        <mark key="^" line="192" column="135" />
      </file>
      <file name="/work/projects/gitlab/java/xmlexport/xmlexport-ejb/src/main/java/com/betradar/export/services/schedule/ScheduleAndResultServiceBean.java" timestamp="1550062957652">
        <mark key="a" line="0" column="0" />
        <mark key="'" line="225" column="12" />
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/work/projects/gitlab/java/source/src/com/oddsarbitrage/schedule2/tasks/virtualleague/VHCCreateDefaultOddskeys.java" timestamp="1549541641070">
        <mark key="[" line="41" column="27" />
        <mark key="]" line="41" column="27" />
        <mark key="." line="41" column="27" />
        <mark key="^" line="41" column="27" />
      </file>
      <file name="/work/projects/gitlab/livescore/common/src/main/java/com/oddsarbitrage/livescore/event/PitchLocationEvent.java" timestamp="1550066624771">
        <mark key="[" line="137" column="88" />
        <mark key="]" line="138" column="17" />
        <mark key="^" line="138" column="17" />
        <mark key="." line="138" column="17" />
      </file>
      <file name="/work/projects/gitlab/java/source/src/com/oddsarbitrage/feeds/MatchOdds.java" timestamp="1549543638799">
        <mark key="[" line="380" column="24" />
        <mark key="]" line="380" column="37" />
        <mark key="^" line="380" column="37" />
        <mark key="." line="380" column="37" />
      </file>
      <file name="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/AstMatch.class" timestamp="1549465984727">
        <mark key="'" line="600" column="130" />
      </file>
      <file name="/work/projects/gitlab/java/sportradar-common/pom.xml" timestamp="1549557372959">
        <mark key="'" line="224" column="28" />
      </file>
      <file name="/work/projects/gitlab/java/source/src/com/oddsarbitrage/schedule2/tasks/translation/TranslationFeed.java" timestamp="1549541673922">
        <mark key="[" line="304" column="21" />
        <mark key="]" line="304" column="20" />
        <mark key="." line="304" column="20" />
        <mark key="^" line="304" column="20" />
      </file>
      <file name="/fragment.java" timestamp="1550065743072">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/work/projects/gitlab/java/source/src/com/oddsarbitrage/bpr/render/xls/easy_xls/EasyCell.java" timestamp="1549551074527">
        <mark key="[" line="317" column="38" />
        <mark key="]" line="317" column="38" />
        <mark key="." line="317" column="38" />
        <mark key="^" line="317" column="38" />
      </file>
    </filemarks>
    <jumps>
      <jump line="191" column="19" filename="/work/projects/gitlab/java/xmlexport/xmlexport-ejb/src/main/java/com/betradar/export/services/ranking/TennisRankingServiceBean.java" />
      <jump line="59" column="57" filename="/work/projects/gitlab/java/xmlexport/xmlexport-ejb/src/main/java/com/betradar/export/services/ranking/TennisRankingServiceBean.java" />
      <jump line="149" column="47" filename="/work/projects/gitlab/livescore/common/src/main/java/com/oddsarbitrage/liveodds/livescore/LiveoddsToLivescore.java" />
      <jump line="62" column="73" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190204.115517-268.jar!/com/oddsarbitrage/scout/AstMatch.class" />
      <jump line="87" column="14" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190204.115517-268.jar!/com/oddsarbitrage/scout/AstMatch.class" />
      <jump line="126" column="36" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190204.115517-268.jar!/com/oddsarbitrage/scout/AstMatch.class" />
      <jump line="449" column="21" filename="/work/projects/gitlab/livescore/common/src/main/java/com/oddsarbitrage/scout/livescore/ScoutLivescoreComponent.java" />
      <jump line="122" column="28" filename="/work/projects/gitlab/livescore/common/src/main/java/com/oddsarbitrage/scout/livescore/ScoutLivescoreComponent.java" />
      <jump line="140" column="12" filename="/work/projects/gitlab/livescore/common/src/main/java/com/oddsarbitrage/scout/livescore/ScoutLivescoreComponent.java" />
      <jump line="492" column="29" filename="/work/projects/gitlab/livescore/common/src/main/java/com/oddsarbitrage/scout/livescore/ScoutLivescoreComponent.java" />
      <jump line="723" column="39" filename="/work/projects/gitlab/livescore/common/src/main/java/com/oddsarbitrage/scout/livescore/ScoutLivescoreComponent.java" />
      <jump line="131" column="32" filename="/work/projects/gitlab/livescore/common/src/main/java/com/oddsarbitrage/scout/livescore/ScoutToLivescore.java" />
      <jump line="68" column="10" filename="/work/projects/gitlab/livescore/common/src/main/java/com/oddsarbitrage/scout/livescore/ScoutToLivescore.java" />
      <jump line="233" column="77" filename="$MAVEN_REPOSITORY$/com/google/guava/guava/26.0-jre/guava-26.0-jre-sources.jar!/com/google/common/base/Optional.java" />
      <jump line="232" column="14" filename="$MAVEN_REPOSITORY$/com/google/guava/guava/26.0-jre/guava-26.0-jre-sources.jar!/com/google/common/base/Optional.java" />
      <jump line="246" column="21" filename="$MAVEN_REPOSITORY$/com/google/guava/guava/26.0-jre/guava-26.0-jre-sources.jar!/com/google/common/base/Optional.java" />
      <jump line="61" column="37" filename="$MAVEN_REPOSITORY$/com/google/guava/guava/26.0-jre/guava-26.0-jre-sources.jar!/com/google/common/base/Optional.java" />
      <jump line="124" column="77" filename="$MAVEN_REPOSITORY$/com/google/guava/guava/26.0-jre/guava-26.0-jre-sources.jar!/com/google/common/base/Optional.java" />
      <jump line="213" column="14" filename="$MAVEN_REPOSITORY$/com/google/guava/guava/26.0-jre/guava-26.0-jre-sources.jar!/com/google/common/base/Optional.java" />
      <jump line="192" column="27" filename="/work/projects/gitlab/java/source/pom.xml" />
      <jump line="563" column="41" filename="/work/projects/gitlab/java/source/pom.xml" />
      <jump line="286" column="27" filename="/work/projects/gitlab/java/source/pom.xml" />
      <jump line="142" column="32" filename="/work/projects/gitlab/java/source/src/com/oddsarbitrage/odds/OddsGetter.java" />
      <jump line="686" column="37" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-common/2019.1.1-SNAPSHOT/ingame-betting-common-2019.1.1-20190206.064553-212.jar!/com/oddsarbitrage/liveodds/server/SubType.class" />
      <jump line="809" column="8" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-common/2019.1.1-SNAPSHOT/ingame-betting-common-2019.1.1-20190206.064553-212.jar!/com/oddsarbitrage/liveodds/server/SubType.class" />
      <jump line="810" column="10" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-common/2019.1.1-SNAPSHOT/ingame-betting-common-2019.1.1-20190206.064553-212.jar!/com/oddsarbitrage/liveodds/server/SubType.class" />
      <jump line="888" column="11" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-common/2019.1.1-SNAPSHOT/ingame-betting-common-2019.1.1-20190206.064553-212.jar!/com/oddsarbitrage/liveodds/server/SubType.class" />
      <jump line="922" column="13" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-common/2019.1.1-SNAPSHOT/ingame-betting-common-2019.1.1-20190206.064553-212.jar!/com/oddsarbitrage/liveodds/server/SubType.class" />
      <jump line="26" column="24" filename="/work/projects/gitlab/java/source/pom.xml" />
      <jump line="119" column="8" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/AstMatch.class" />
      <jump line="286" column="87" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/AstMatch.class" />
      <jump line="589" column="116" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/AstMatch.class" />
      <jump line="596" column="142" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/AstMatch.class" />
      <jump line="597" column="75" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/AstMatch.class" />
      <jump line="600" column="130" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/AstMatch.class" />
      <jump line="25" column="13" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/sports/volleyball/ScoutMatchDataVolleyball.class" />
      <jump line="38" column="46" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/sports/volleyball/ScoutMatchDataVolleyball.class" />
      <jump line="46" column="32" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/sports/volleyball/ScoutMatchDataVolleyball.class" />
      <jump line="87" column="16" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/sports/volleyball/ScoutMatchDataVolleyball.class" />
      <jump line="88" column="33" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/sports/volleyball/ScoutMatchDataVolleyball.class" />
      <jump line="90" column="49" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/sports/volleyball/ScoutMatchDataVolleyball.class" />
      <jump line="94" column="49" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/sports/volleyball/ScoutMatchDataVolleyball.class" />
      <jump line="100" column="16" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/sports/volleyball/ScoutMatchDataVolleyball.class" />
      <jump line="113" column="16" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/sports/volleyball/ScoutMatchDataVolleyball.class" />
      <jump line="116" column="16" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/sports/volleyball/ScoutMatchDataVolleyball.class" />
      <jump line="123" column="20" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/sports/volleyball/ScoutMatchDataVolleyball.class" />
      <jump line="126" column="20" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/sports/volleyball/ScoutMatchDataVolleyball.class" />
      <jump line="129" column="20" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/sports/volleyball/ScoutMatchDataVolleyball.class" />
      <jump line="132" column="20" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/sports/volleyball/ScoutMatchDataVolleyball.class" />
      <jump line="135" column="20" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/sports/volleyball/ScoutMatchDataVolleyball.class" />
      <jump line="138" column="20" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/sports/volleyball/ScoutMatchDataVolleyball.class" />
      <jump line="200" column="16" filename="$MAVEN_REPOSITORY$/com/sportradar/ingame-betting-livedata/2019.1.1-SNAPSHOT/ingame-betting-livedata-2019.1.1-20190206.064621-280.jar!/com/oddsarbitrage/scout/sports/volleyball/ScoutMatchDataVolleyball.class" />
      <jump line="88" column="31" filename="/work/projects/gitlab/livescore/common/pom.xml" />
      <jump line="69" column="31" filename="/work/projects/gitlab/livescore/common/pom.xml" />
      <jump line="375" column="56" filename="/work/projects/gitlab/java/source/src/com/oddsarbitrage/integration/omaki/importer/OmakiMatchAlertHolder.java" />
      <jump line="313" column="20" filename="/work/projects/gitlab/java/source/pom.xml" />
      <jump line="426" column="25" filename="/work/projects/gitlab/java/source/pom.xml" />
      <jump line="451" column="25" filename="/work/projects/gitlab/java/source/pom.xml" />
      <jump line="466" column="25" filename="/work/projects/gitlab/java/source/pom.xml" />
      <jump line="536" column="25" filename="/work/projects/gitlab/java/source/pom.xml" />
      <jump line="577" column="25" filename="/work/projects/gitlab/java/source/pom.xml" />
      <jump line="66" column="6" filename="$MAVEN_REPOSITORY$/org/apache/poi/poi-ooxml/3.17/poi-ooxml-3.17-sources.jar!/org/apache/poi/xssf/usermodel/XSSFCellStyle.java" />
      <jump line="165" column="36" filename="$MAVEN_REPOSITORY$/org/apache/poi/poi-ooxml/3.17/poi-ooxml-3.17-sources.jar!/org/apache/poi/xssf/usermodel/XSSFCellStyle.java" />
      <jump line="166" column="38" filename="$MAVEN_REPOSITORY$/org/apache/poi/poi-ooxml/3.17/poi-ooxml-3.17-sources.jar!/org/apache/poi/xssf/usermodel/XSSFCellStyle.java" />
      <jump line="167" column="35" filename="$MAVEN_REPOSITORY$/org/apache/poi/poi-ooxml/3.17/poi-ooxml-3.17-sources.jar!/org/apache/poi/xssf/usermodel/XSSFCellStyle.java" />
      <jump line="169" column="28" filename="$MAVEN_REPOSITORY$/org/apache/poi/poi-ooxml/3.17/poi-ooxml-3.17-sources.jar!/org/apache/poi/xssf/usermodel/XSSFCellStyle.java" />
      <jump line="211" column="36" filename="$MAVEN_REPOSITORY$/org/apache/poi/poi-ooxml/3.17/poi-ooxml-3.17-sources.jar!/org/apache/poi/xssf/usermodel/XSSFCellStyle.java" />
      <jump line="212" column="61" filename="$MAVEN_REPOSITORY$/org/apache/poi/poi-ooxml/3.17/poi-ooxml-3.17-sources.jar!/org/apache/poi/xssf/usermodel/XSSFCellStyle.java" />
      <jump line="214" column="19" filename="$MAVEN_REPOSITORY$/org/apache/poi/poi-ooxml/3.17/poi-ooxml-3.17-sources.jar!/org/apache/poi/xssf/usermodel/XSSFCellStyle.java" />
      <jump line="215" column="24" filename="$MAVEN_REPOSITORY$/org/apache/poi/poi-ooxml/3.17/poi-ooxml-3.17-sources.jar!/org/apache/poi/xssf/usermodel/XSSFCellStyle.java" />
      <jump line="244" column="52" filename="$MAVEN_REPOSITORY$/org/apache/poi/poi-ooxml/3.17/poi-ooxml-3.17-sources.jar!/org/apache/poi/xssf/usermodel/XSSFCellStyle.java" />
      <jump line="80" column="44" filename="/work/projects/gitlab/java/source/src/com/oddsarbitrage/bpr/render/xls/XlsBorderStyle.java" />
      <jump line="164" column="10" filename="/work/projects/gitlab/java/source/src/com/oddsarbitrage/bpr/render/xls/XlsBorderStyle.java" />
      <jump line="24" column="21" filename="/work/projects/gitlab/java/sportradar-common/src/main/java/com/oddsarbitrage/statistics/Statistics.java" />
      <jump line="676" column="2" filename="/work/projects/gitlab/java/sportradar-common/src/main/java/com/oddsarbitrage/statistics/Statistics.java" />
      <jump line="672" column="30" filename="/work/projects/gitlab/java/sportradar-common/src/main/java/com/oddsarbitrage/statistics/Statistics.java" />
      <jump line="749" column="2" filename="/work/projects/gitlab/java/sportradar-common/src/main/java/com/oddsarbitrage/statistics/Statistics.java" />
      <jump line="750" column="2" filename="/work/projects/gitlab/java/sportradar-common/src/main/java/com/oddsarbitrage/statistics/Statistics.java" />
      <jump line="751" column="2" filename="/work/projects/gitlab/java/sportradar-common/src/main/java/com/oddsarbitrage/statistics/Statistics.java" />
      <jump line="752" column="2" filename="/work/projects/gitlab/java/sportradar-common/src/main/java/com/oddsarbitrage/statistics/Statistics.java" />
      <jump line="753" column="2" filename="/work/projects/gitlab/java/sportradar-common/src/main/java/com/oddsarbitrage/statistics/Statistics.java" />
      <jump line="754" column="2" filename="/work/projects/gitlab/java/sportradar-common/src/main/java/com/oddsarbitrage/statistics/Statistics.java" />
      <jump line="755" column="2" filename="/work/projects/gitlab/java/sportradar-common/src/main/java/com/oddsarbitrage/statistics/Statistics.java" />
      <jump line="794" column="2" filename="/work/projects/gitlab/java/sportradar-common/src/main/java/com/oddsarbitrage/statistics/Statistics.java" />
      <jump line="795" column="2" filename="/work/projects/gitlab/java/sportradar-common/src/main/java/com/oddsarbitrage/statistics/Statistics.java" />
      <jump line="224" column="28" filename="/work/projects/gitlab/java/sportradar-common/pom.xml" />
      <jump line="306" column="2" filename="/work/projects/gitlab/java/league-standings-builder/src/main/java/com/oddsarbitrage/common/Util4.java" />
      <jump line="20" column="45" filename="/work/projects/gitlab/java/league-standings-builder/src/main/java/com/oddsarbitrage/common/Util4.java" />
      <jump line="61" column="26" filename="/work/projects/gitlab/java/source/src/com/oddsarbitrage/common/Util4.java" />
      <jump line="463" column="49" filename="/work/projects/gitlab/java/source/src/com/oddsarbitrage/common/Util4.java" />
      <jump line="1174" column="33" filename="/work/projects/gitlab/java/source/src/com/oddsarbitrage/common/Util4.java" />
      <jump line="140" column="56" filename="/work/projects/gitlab/java/league-standings-builder/src/main/java/com/oddsarbitrage/common/Util4.java" />
      <jump line="112" column="4" filename="/work/projects/gitlab/java/league-standings-builder/src/main/java/com/oddsarbitrage/common/Util4.java" />
      <jump line="262" column="69" filename="/work/projects/gitlab/java/xmlexport/xmlexport-ejb/src/main/java/com/betradar/export/services/ranking/TennisRankingServiceBean.java" />
      <jump line="224" column="26" filename="/work/projects/gitlab/java/xmlexport/xmlexport-ejb/src/main/java/com/betradar/export/services/ranking/TennisRankingServiceBean.java" />
      <jump line="225" column="12" filename="/work/projects/gitlab/java/xmlexport/xmlexport-ejb/src/main/java/com/betradar/export/services/schedule/ScheduleAndResultServiceBean.java" />
      <jump line="223" column="27" filename="/work/projects/gitlab/livescore/common/src/main/java/com/oddsarbitrage/livescore/event/PitchLocationEvent.java" />
      <jump line="1147" column="46" filename="/work/projects/gitlab/livescore/common/src/main/java/com/oddsarbitrage/livescore/event/Event.java" />
      <jump line="1723" column="17" filename="/work/projects/gitlab/livescore/common/src/main/java/com/oddsarbitrage/livescore/event/Event.java" />
      <jump line="60" column="0" filename="/work/projects/gitlab/livescore/common/src/main/resources/log4j.xml" />
    </jumps>
    <registers>
      <register name="&quot;" type="2">
        <text encoding="base64">ICAgICAgU3RyaW5nLmZvcm1hdCgiVElNRSBJUyBOTyBUSU1FIiwgKQo=</text>
      </register>
      <register name="-" type="4">
        <text>getMatchMillis</text>
      </register>
      <register name="/" type="4">
        <text>updateTime</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICBwdWJsaWMgc3RhdGljIFN0cmluZyByZXBsYWNlQVNDSUlDaGFyQ29ycmVjdCgKICAgICAgU3RyaW5nIHNvdXJjZSwgaW50IHJlbW92ZUFTQ0lJQ29kZSwgaW50IHJlcGxhY2VBU0NJSUNvZGUpIHsKICAgIFN0cmluZ0J1ZmZlciByZXRWYWwgPSBuZXcgU3RyaW5nQnVmZmVyKCk7CiAgICBmb3IgKGludCBpID0gMDsgaSA8IHNvdXJjZS5sZW5ndGgoKTsgaSsrKSB7CiAgICAgIGlmICgoaW50KSBzb3VyY2UuY2hhckF0KGkpICE9IHJlbW92ZUFTQ0lJQ29kZSkgcmV0VmFsLmFwcGVuZChzb3VyY2UuY2hhckF0KGkpKTsKICAgICAgZWxzZSByZXRWYWwuYXBwZW5kKChjaGFyKSByZXBsYWNlQVNDSUlDb2RlKTsKICAgIH0KICAgIHJldHVybiByZXRWYWwudG9TdHJpbmcoKTsKICB9Cg==</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">ICAgICAgU3RyaW5nLmZvcm1hdCgiVElNRSBJUyBOTyBUSU1FIiwgKQo=</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">ICAgIFN5c3RlbS5vdXQucHJpbnRsbigpOwo=</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">CTxhcHBlbmRlciBuYW1lPSJEZWZhdWx0RXJyb3JMb2dBcHBlbmRlclN5bmMiIGNsYXNzPSJvcmcuYXBhY2hlLmxvZzRqLkZpbGVBcHBlbmRlciI+CgkJPHBhcmFtIG5hbWU9IkZpbGUiIHZhbHVlPSIuL2xvZy9lcnJvcnMubG9nIiAvPgoJCTxwYXJhbSBuYW1lPSJBcHBlbmQiIHZhbHVlPSJ0cnVlIiAvPgoJCTxwYXJhbSBuYW1lPSJUaHJlc2hvbGQiIHZhbHVlPSJlcnJvciIgLz4KCQk8bGF5b3V0IGNsYXNzPSJvcmcuYXBhY2hlLmxvZzRqLlBhdHRlcm5MYXlvdXQiPgoJCQk8cGFyYW0gbmFtZT0iQ29udmVyc2lvblBhdHRlcm4iIHZhbHVlPSIlZHt5eXl5LU1NLWRkIEhIOm1tOnNzfSAoJXApOiAlYy4lTSglTCklbiAtICVtJW4iIC8+CgkJPC9sYXlvdXQ+Cgk8L2FwcGVuZGVyPgoJCgk8YXBwZW5kZXIgbmFtZT0iRGVmYXVsdEVycm9yTG9nQXBwZW5kZXIiIGNsYXNzPSJvcmcuYXBhY2hlLmxvZzRqLkFzeW5jQXBwZW5kZXIiPgoJCTxwYXJhbSBuYW1lPSJCdWZmZXJTaXplIiB2YWx1ZT0iMTAwMCIvPgoJCTxwYXJhbSBuYW1lPSJCbG9ja2luZyIgdmFsdWU9ImZhbHNlIi8+CgkJPHBhcmFtIG5hbWU9IkxvY2F0aW9uSW5mbyIgdmFsdWU9InRydWUiLz4KCQk8YXBwZW5kZXItcmVmIHJlZj0iRGVmYXVsdEVycm9yTG9nQXBwZW5kZXJTeW5jIiAvPgoJPC9hcHBlbmRlcj4KCQoJPGFwcGVuZGVyIG5hbWU9IkNvbnNvbGVBcHBlbmRlclN5bmMiIGNsYXNzPSJvcmcuYXBhY2hlLmxvZzRqLkNvbnNvbGVBcHBlbmRlciI+CgkJPHBhcmFtIG5hbWU9IlRocmVzaG9sZCIgdmFsdWU9ImRlYnVnIiAvPgoJCTxsYXlvdXQgY2xhc3M9Im9yZy5hcGFjaGUubG9nNGouUGF0dGVybkxheW91dCI+CgkJCTxwYXJhbSBuYW1lPSJDb252ZXJzaW9uUGF0dGVybiIgdmFsdWU9IiVke3l5eXktTU0tZGQgSEg6bW06c3N9ICglcCk6ICVjezF9LiVNKCVMKSAlbSVuIiAvPgoJCTwvbGF5b3V0PgoJPC9hcHBlbmRlcj4KCQo=</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">aW1wb3J0IG9yZy5hbnRsci5ydW50aW1lLm1pc2MuU3RhdHM7Cg==</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">aW1wb3J0IG9yZy5lbGFzdGljc2VhcmNoLmNvbW1vbi5jb2xsZWN0LkltbXV0YWJsZVNldDsK</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ICAgKiBAcGFyYW0gd2l0aE5hbWVzCg==</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">ICBwdWJsaWMgc3RhdGljIGJvb2xlYW4gaXNEYXRlQWZ0ZXIoRGF0ZSBzb3VyY2UsIERhdGUgY29tcGFyZSwgaW50IGFkZE1pbnV0ZXMpIHsKICAgIGxvbmcgc291cmNlVGltZSA9IHNvdXJjZS5nZXRUaW1lKCk7CiAgICBsb25nIGNvbXBhcmVUaW1lID0gY29tcGFyZS5nZXRUaW1lKCk7CiAgICBpZiAoc291cmNlVGltZSArIChhZGRNaW51dGVzICogMTAwMCAqIDYwKSA8IGNvbXBhcmVUaW1lKSByZXR1cm4gdHJ1ZTsKICAgIHJldHVybiBmYWxzZTsKICB9CgogIHB1YmxpYyBzdGF0aWMgdm9pZCBFYXN5KCkgewogICAgRGF0ZSBkID0gbmV3IERhdGUoKTsKICAgIGludCB0eiA9IGQuZ2V0VGltZXpvbmVPZmZzZXQoKTsKICAgIFN5c3RlbS5vdXQucHJpbnRsbih0eik7CiAgfQoKICBwdWJsaWMgc3RhdGljIERhdGUgcmVtb3ZlRGF5cyhEYXRlIHNvdXJjZSwgaW50IGRheXMpIHsKICAgIHNvdXJjZS5zZXREYXRlKHNvdXJjZS5nZXREYXRlKCkgLSBkYXlzKTsKICAgIHJldHVybiBzb3VyY2U7CiAgfQoKICBwdWJsaWMgc3RhdGljIFN0cmluZyBnZXREYXlGcm9tU3RyaW5nKFN0cmluZyBkYXlTdHJpbmcpIHsKICAgIFN0cmluZ1tdIGRheXMgPSB7Ik1PTkRBWSIsICJUVUVTREFZIiwgIldFRE5FU0RBWSIsICJUSFVSU0RBWSIsICJGUklEQVkiLCAiU0FUVVJEQVkiLCAiU1VOREFZIn07CiAgICBTdHJpbmdbXSBkYXlzMiA9IHsiTU9OIiwgIlRVRSIsICJXRUQiLCAiVEhVIiwgIkZSSSIsICJTQVQiLCAiU1VOIn07CiAgICBTdHJpbmdbXSBkYXlzU3BhbmlzaCA9IHsKICAgICAgIkxVTkVTIiwgIk1BUlRFUyIsICJNSUVSQ09MRVMiLCAiSlVFVkVTIiwgIlZJRVJORVMiLCAiU0FCQURPIiwgIkRPTUlOR08iCiAgICB9OwogICAgZm9yIChpbnQgaiA9IDA7IGogPCBkYXlzLmxlbmd0aDsgaisrKSB7CiAgICAgIGlmIChkYXlTdHJpbmcudG9VcHBlckNhc2UoKS5pbmRleE9mKGRheXNbal0pID4gLTEpIHJldHVybiBkYXlzW2pdOwogICAgfQogICAgZm9yIChpbnQgaiA9IDA7IGogPCBkYXlzLmxlbmd0aDsgaisrKSB7CiAgICAgIGlmIChkYXlTdHJpbmcudG9VcHBlckNhc2UoKS5pbmRleE9mKGRheXMyW2pdKSA+IC0xKSByZXR1cm4gZGF5c1tqXTsKICAgIH0KICAgIGZvciAoaW50IGogPSAwOyBqIDwgZGF5cy5sZW5ndGg7IGorKykgewogICAgICBpZiAoZGF5U3RyaW5nLnRvVXBwZXJDYXNlKCkuaW5kZXhPZihkYXlzU3BhbmlzaFtqXSkgPiAtMSkgcmV0dXJuIGRheXNbal07CiAgICB9CiAgICByZXR1cm4gbnVsbDsKICB9CgogIHB1YmxpYyBzdGF0aWMgaW50IGdldE1vbnRoRnJvbVN0cmluZyhTdHJpbmcgbW9udGhTdHJpbmcpIHsKICAgIFZlY3RvciB0ZW1wID0gY29tLmJldHJhZGFyLmNvbW1vbi5VdGlsLnNwbGl0U3RyaW5nKG1vbnRoU3RyaW5nLCAiICIpOwogICAgZm9yIChpbnQgaiA9IDA7IGogPCB0ZW1wLnNpemUoKTsgaisrKSB7CiAgICAgIGludCByZXRWYWwgPSBjb20uYmV0cmFkYXIuY29tbW9uLlV0aWwuY29udmVydE1vbnRoU3RyaW5nKChTdHJpbmcpIHRlbXAuZWxlbWVudEF0KGopKTsKICAgICAgaWYgKHJldFZhbCA+PSAwKSByZXR1cm4gcmV0VmFsICsgMTsKICAgIH0KICAgIHJldHVybiAtMTsKICB9CgogIHB1YmxpYyBzdGF0aWMgRGF0ZSBjb252ZXJ0RGF5U3RyaW5nVG9EYXRlKFN0cmluZyBkYXlTdHJpbmcpIHsKICAgIFN0cmluZyB0aGVEYXkgPSBVdGlsNC5nZXREYXlGcm9tU3RyaW5nKGRheVN0cmluZyk7CiAgICBpZiAodGhlRGF5ICE9IG51bGwpIHJldHVybiBVdGlsNC5nZXREYXRlKHRoZURheSwgMCwgMCk7CiAgICByZXR1cm4gbnVsbDsKICB9Cg==</text>
      </register>
      <register name=":" type="4">
        <text>308</text>
      </register>
    </registers>
    <search>
      <last-search>updateTime</last-search>
      <last-offset />
      <last-pattern>updateTime</last-pattern>
      <last-replace>org.apache.poi.ss.usermodel.BorderStyle.</last-replace>
      <last-substitute>XSSFCellStyle.BORDER_</last-substitute>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry>betting</entry>
        <entry>getValue</entry>
        <entry>apache</entry>
        <entry>LiveMessageReceiver</entry>
        <entry>border</entry>
        <entry>XSSFCellStyle.BORDER_</entry>
        <entry>weighty</entry>
        <entry>setBoldWeight</entry>
        <entry>weight</entry>
        <entry>GAMES_PITCHING</entry>
        <entry>PTICHING</entry>
        <entry>PITCHING</entry>
        <entry>PITCHING_STARTERS</entry>
        <entry>PITCHING_STARTERS_SACRIFICE</entry>
        <entry>replaceBetweenCorrect</entry>
        <entry>correct</entry>
        <entry>removeBetweenCorrect</entry>
        <entry>isHandicap</entry>
        <entry>invoke</entry>
        <entry>updateTime</entry>
      </history-search>
      <history-cmd>
        <entry encoding="base64">JzwsJz5zLzskLy9n</entry>
        <entry encoding="base64">JzwsJz5zLywvKS9n</entry>
        <entry encoding="base64">JzwsJz5zLz0+LywvZ2M=</entry>
        <entry encoding="base64">JzwsJz5zLyQvOy9nYw==</entry>
        <entry encoding="base64">JzwsJz5zLzovLCAwKTsvZ2M=</entry>
        <entry encoding="base64">JzwsJz5zLzovLCAwKS9nYw==</entry>
        <entry encoding="base64">JzwsJz5zLzAvLTEvZw==</entry>
        <entry encoding="base64">JzwsJz5zLyQvLC9n</entry>
        <entry>w</entry>
        <entry>1754</entry>
        <entry>%s/GeneralScoutDataConnector.getScoutMatchData/gscdInstance.getScoutMatchDataFor/g</entry>
        <entry>%s/GeneralScoutDataConnector.getScoutMatchData/gsdcInstance.getScoutMatchDataFor/g</entry>
        <entry>%s/2018.5.1/2018.6.12/gc</entry>
        <entry>%s/MatchOdds.type/MatchOddsType.type/g</entry>
        <entry>47</entry>
        <entry>56</entry>
        <entry>21</entry>
        <entry>%s/XSSFCellStyle.BORDER_/org.apache.poi.ss.usermodel.BorderStyle./gc</entry>
        <entry>set ignorecase</entry>
        <entry>308</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Y</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Q</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>